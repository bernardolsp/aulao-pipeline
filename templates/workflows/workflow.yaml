apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ .Release.Name }}-pipeline
  namespace: argo
spec:
  entrypoint: clone

  templates:
  - name: clone
    steps:
    - - name: clone
        template: clone-repo
    - - name: test
        template: test
    - - name: get-hash
        template: get-hash
    - - name: build
        template: build
        arguments:
          parameters:
          - name: commit
            value: "{{`{{steps.get-hash.outputs.parameters.result}}`}}"
    - - name: clone-yaml-repo
        template: clone-yaml-repo
    - - name: list-yaml
        template: list-yaml
    - - name: sed-yaml
        template: sed-yaml
        arguments:
          parameters:
          - name: commit
            value: "{{`{{steps.get-hash.outputs.parameters.result}}`}}"
    - - name: commit-push
        template: commit-push

  - name: clone-repo
    container: 
      image: alpine/git
      command: [git]
      args: ["clone", {{ .Values.application.applicationRepo }}, "/src"]
      volumeMounts:
      - name: workdir
        mountPath: /src

{{ if eq .Values.application.language "go"}}
  - name: test
    container: 
      image: golang:1.22
      command: [sh, -c]
      args: ["cd /src && go get . && go test -v ."]
      volumeMounts:
      - name: workdir
        mountPath: /src
{{ end }}
  - name: get-hash
    container: 
      image: alpine/git
      command: [sh, -c]
      args: ["cd /src && git rev-parse --short HEAD > /tmp/commit_hash.txt"]
      volumeMounts:
      - name: workdir
        mountPath: /src
    outputs:
      parameters:
      - name: result
        valueFrom:
          path: /tmp/commit_hash.txt

  - name: build
    inputs:
      parameters:
      - name: commit
    container: 
      image: gcr.io/kaniko-project/executor:debug
      command: [/kaniko/executor]
      args: 
        - --context=/src
        - --dockerfile=/src/Dockerfile
        - --destination={{ .Values.application.containerRepository }}:{{`{{inputs.parameters.commit}}`}}
        - --destination={{ .Values.application.containerRepository }}:latest
      volumeMounts:
      - name: workdir
        mountPath: /src
      - name: docker-credentials
        mountPath: /kaniko/.docker/

  - name: clone-yaml-repo
    container: 
      image: alpine/git
      command: [sh, -c]
      args:
      -  |
        git clone https://$GIT_TOKEN@{{ .Values.application.yamlRepo }} /src/yamlrepo
      volumeMounts:
      - name: workdir
        mountPath: /src
      env: 
      - name: GIT_TOKEN
        valueFrom:
          secretKeyRef:
            name: git-token
            key: token

  - name: list-yaml
    container: 
      image: alpine
      command: [sh, -c]
      args: 
      - ls -la /src/yamlrepo && cat /src/yamlrepo/values.yaml
      volumeMounts:
      - name: workdir
        mountPath: /src

  - name: sed-yaml
    inputs:
      parameters:
      - name: commit
    container: 
      image: alpine
      command: [sh, -c]
      args: 
      - 'sed -i "/^ *image:/s|.*|  image: {{ .Values.application.containerRepository }}:{{`{{inputs.parameters.commit}}`}}|" /src/yamlrepo/values.yaml'
      - ls -la /src/yamlrepo
      - cat /src/yamlrepo/values.yaml
      volumeMounts:
      - name: workdir
        mountPath: /src
  
  - name: commit-push
    container: 
      image: alpine/git
      command: [sh, -c]
      args: 
        - |
           cd /src/yamlrepo 
           ls
           cat .git/config
           git config --local user.email "action@github.com"
           git config --local user.name "Argo Workflows"
           git add . 
           git commit -m 'Update image'
           git push
      volumeMounts:
      - name: workdir
        mountPath: /src